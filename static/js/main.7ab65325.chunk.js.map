{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","memo","todos","selectedTodoId","onSelect","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","onSearch","filter","toFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortType","TodoModal","selectedTodo","useState","user","setUser","useEffect","userId","owner","catch","href","email","name","App","todosList","setTodosList","loading","setLoading","searchQuery","setSearchQuery","setFilter","setSelectedTodoId","data","finally","visibleTodos","useMemo","item","ALL","COMPLETED","ACTIVE","toLowerCase","includes","find","undefined","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ab65325.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  onSelect: (id: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = memo(({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={cn(\n                  'far',\n                  {\n                    'fa-eye': selectedTodoId !== todo.id,\n                    'fa-eye-slash': selectedTodoId === todo.id,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import { memo } from 'react';\n\ntype Props = {\n  query: string,\n  onSearch: (query: string) => void,\n  filter: string,\n  toFilter: (filterType: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = memo((\n  {\n    query, onSearch, filter, toFilter,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => toFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onSearch(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSearch('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(data => (setTodosList(() => data)))\n      .catch(() => setTodosList([]))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const getSelected = (allTodos: Todo[]): Todo[] => {\n    return allTodos.filter(item => {\n      switch (filter) {\n        case SortType.ALL:\n          return true;\n\n        case SortType.COMPLETED:\n          return item.completed === true;\n\n        case SortType.ACTIVE:\n          return item.completed === false;\n\n        default: return true;\n      }\n    });\n  };\n\n  const visibleTodos = useMemo(() => {\n    const selectedCategory = getSelected(todosList);\n\n    return selectedCategory.filter(todo => todo.title.toLowerCase()\n      .includes(searchQuery.toLowerCase()));\n  }, [searchQuery, todosList, filter]);\n\n  const selectedTodo = useMemo(() => {\n    return todosList.find(todo => todo.id === selectedTodoId) || undefined;\n  }, [todosList, selectedTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                onSearch={setSearchQuery}\n                filter={filter}\n                toFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {todosList.length && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodoId}\n                  onSelect={setSelectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} onSelect={setSelectedTodoId} />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, memo, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSelect: (id: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = memo(({\n  selectedTodo,\n  onSelect,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.id)\n      .then(owner => setUser(() => owner))\n      .catch(() => setUser(() => null));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}